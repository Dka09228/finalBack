<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin page</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      text-align: center;
    }

    .display {
      padding: 10px;
      margin-bottom: 20px;
    }

    h1 {
      color: #333;
    }

    ul {
      list-style-type: none;
      padding: 0;
    }

    li {
      margin-bottom: 10px;
    }

    button {
      background-color: #4caf50;
      color: white;
      border: none;
      padding: 8px 16px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 14px;
      cursor: pointer;
      border-radius: 4px;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #45a049;
    }

    a {
      text-decoration: none;
      color: white;
    }

    .logout {
      margin-bottom: 20px;
    }
  </style>
</head>

<body>
  <%- include('partials/header') %>
  <div class="display"></div>
  <h1>Users</h1>
  <ul id="userList"></ul>
  <button class="logout"> <a href="/logout">Log Out</a></button>
  <script>
    const display = document.querySelector('.display');
    const userList = document.getElementById('userList');

    // Function to fetch and display users
    const getUsers = async () => {
      try {
        const res = await fetch('/api/auth/getUsers');
        const data = await res.json();

        // Clear existing user list
        userList.innerHTML = '';

        data.user.forEach(user => {
          if (user.username !== 'admin') {
            const li = document.createElement('li');
            li.innerHTML = `<b>Username</b> => ${user.username} <br> <b>Role</b> => ${user.role} 
              <button class="edit">Edit Role</button> <button class="delete">Delete User</button>`;
            userList.appendChild(li);

            const editButton = li.querySelector('.edit');
            const deleteButton = li.querySelector('.delete');

            // Edit button click event
            editButton.addEventListener('click', async () => {
              const id = user.id;
              try {
                const res = await fetch('/api/auth/update', {
                  method: 'PUT',
                  body: JSON.stringify({ role: 'admin', id }),
                  headers: { 'Content-Type': 'application/json' }
                });
                const dataUpdate = await res.json();
                if (res.status === 400 || res.status === 401) {
                  display.textContent = `${dataUpdate.message}. ${dataUpdate.error ? dataUpdate.error : ''}`;
                } else {
                  location.reload(); // Reload page after successful update
                }
              } catch (error) {
                console.error('Error updating role:', error);
              }
            });

            // Delete button click event
            deleteButton.addEventListener('click', async () => {
              const id = user.id;
              try {
                const res = await fetch('/api/auth/deleteUser', {
                  method: 'DELETE',
                  body: JSON.stringify({ id }),
                  headers: { 'Content-Type': 'application/json' }
                });
                const dataDelete = await res.json();
                if (res.status === 401) {
                  display.textContent = `${dataDelete.message}. ${dataDelete.error ? dataDelete.error : ''}`;
                } else {
                  location.reload(); 
                }
              } catch (error) {
                console.error('Error deleting user:', error);
              }
            });
          }
        });
      } catch (error) {
        console.error('Error fetching users:', error);
      }
    };

    // Call getUsers function initially
    getUsers();
  </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>

</html>
